{"version":3,"sources":["serviceWorker.js","custom-theme.js","components/Header.js","components/Footer.js","Constants.js","components/Signup.js","store/actions/actionTypes.js","components/Login.js","components/Logout.js","components/Home/FlixCarousel.js","components/Home/FlixCollection.js","components/Spinner.js","components/Home/Home.js","components/SessionValidator.js","components/Home/Flix.js","components/Home/GenreCollection.js","components/NotAllowed.js","App.js","store/reducers/flixReducer.js","store/reducers/authReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","palette","type","primary","main","secondary","red","textPrimary","typography","fontFamily","useStyles","makeStyles","appbarRoot","backgroundColor","border","boxShadow","color","transition","sticky","brandDefault","brandScrolled","Grid","padding","alignItems","GridItem","Card","CardMedia","height","paddingTop","CardHeader","CardHeaderTitle","gridList","display","flexWrap","gridTile","gridTileBar","subtitle","textTransform","Header","props","classes","useState","scrollPos","setScrollPos","useEffect","onscroll","scrolled","pageYOffset","AppBar","root","positionSticky","position","Toolbar","to","style","textDecoration","Typography","variant","className","footer","id","href","target","rel","CONSTANTS","FIREBASE_TOKEN_REFRESH","FIREBASE_SIGNUP_URI","FIREBASE_SIGNIN_URI","FIREBASE_APIKEY","NOTFLIX_URI","connect","state","isAuth","auth","isAuthorized","signupError","dispatch","onSignupSubmit","signupFormData","postData","email","password","returnSecureToken","axios","post","then","res","console","log","inputData","response","signupSuccess","catch","error","signupFailure","actionTypes","React","firstname","lastname","confirmPassword","showPassword","showConfirmPassword","signupData","setSignupData","handleChange","prop","event","value","SignupError","length","component","fontWeight","marginTop","container","justify","item","xs","sm","md","lg","noValidate","autoComplete","onSubmit","preventDefault","FormControl","fullWidth","margin","InputLabel","htmlFor","FilledInput","onChange","endAdornment","InputAdornment","IconButton","aria-label","onClick","onMouseDown","edge","Visibility","VisibilityOff","Button","size","loginError","onLoginSubmit","errorResponse","loginData","setLoginData","touched","isValid","errMsg","validator","setValidator","trim","LoginError","tempEmailValidator","tempPasswordValidator","test","FormHelperText","onLogout","endIcon","CarouselItem","history","useHistory","Paper","src","flix","thumbnailUrl","alt","title","imdb","genre","join","flixId","selectedFlix","carouselFlix","forEach","_id","push","bind","videoUrl","languages","desc","category","releaseDate","createdAt","updatedAt","__v","FlixCarousel","animation","autoPlay","navButtonsAlwaysVisible","fullHeightHover","map","key","FlixCollection","allFlix","getFlixHandler","HorizontalFlixList","GridList","cols","GridListTile","tile","GridListTileBar","actionIcon","Container","textAlign","name","genreFlix","Spinner","visible","spinnerImg","spinner","flexDirection","justifyContent","spinnerIcon","fontSize","waitText","Home","spin","this","setState","get","data","err","initialState","preferredLang","lang","index","langCollection","filter","includes","preferredGenre","genreCollection","Component","expiresIn","onFlixSelection","Validity","sessionExpiry","Date","Flix","moment","releasedDate","format","GenreCollection","flixArray","params","direction","spacing","raised","subheader","image","CardContent","CardActions","disableSpacing","NotAllowed","App","path","exact","Signup","Login","Logout","Footer","intialState","selectedGenre","flixReducer","action","localStorage","getItem","userId","JSON","parse","token","refreshToken","setLocalStorage","stateObj","setItem","signupSuccessReducer","storableData","localId","idToken","now","signupFailureReducer","errorMsg","message","loginSuccessReducer","storableLoginData","loginFailureReducer","errorLoginMsg","AuthReducer","clear","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03117384.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"rgba(0, 0, 0, 0)\",\n    },\n    secondary: {\n      main: red[500],\n    },\n    textPrimary: {\n      main: \"#fff\",\n    },\n  },\n  typography: {\n    fontFamily: \"Roboto\",\n    primary: {\n      main: \"#fff\",\n    },\n    secondary: {\n      main: red[500],\n    },\n  },\n});\n\nexport const useStyles = makeStyles({\n  appbarRoot: {\n    backgroundColor: \"transparent\",\n    border: 0,\n    boxShadow: \"0px 0px 0px 0px\",\n    color: theme.palette.secondary.main,\n    transition: \"ease-out\",\n  },\n  sticky: {\n    backgroundColor: theme.palette.secondary.main,\n    boxShadow:\n      \"0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)\",\n    color: \"#fff\",\n    transition: \"ease-in\",\n  },\n  brandDefault: {\n    color: theme.palette.secondary.main,\n  },\n  brandScrolled: {\n    color: theme.palette.textPrimary.main,\n  },\n  Grid: {\n    padding: \"15px\",\n    alignItems: \"center\",\n  },\n  GridItem: {},\n  Card: {\n    backgroundColor: \"transparent\",\n    border: \"1px solid #555\",\n  },\n  CardMedia: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  CardHeader: {\n    padding: \"10px\",\n  },\n  CardHeaderTitle: {\n    color: theme.palette.secondary.main,\n  },\n  gridList: {\n    display: \"flex\",\n    flexWrap: \"nowrap\",\n    padding: \"5px 0 15px\",\n  },\n  gridTile: {\n    border: \"1px solid #555\",\n  },\n  gridTileBar: {\n    // backgroundImage: `linear-gradient(90deg, ${theme.palette.secondary.main}, ${theme.palette.secondary.light})`,\n    backgroundColor: \"#00000030\",\n  },\n  subtitle: {\n    textTransform: \"capitalize\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\n\n// import logo from \"../logo.svg\";\nimport { useStyles } from \"../custom-theme\";\n\nconst Header = (props) => {\n  const classes = useStyles();\n  const [scrollPos, setScrollPos] = useState(0);\n\n  useEffect(() => {\n    window.onscroll = () => {\n      let scrolled = window.pageYOffset;\n      setScrollPos(scrolled >= 50 ? true : false);\n    };\n  }, []);\n\n  return (\n    <AppBar\n      // className={trigger ? classes.positionSticky : classes.appbar}\n      // color={trigger ? \"secondary\" : \"transparent\"}\n      classes={{ root: classes.appbarRoot, positionSticky: classes.sticky }}\n      position={scrollPos ? \"sticky\" : \"relative\"}\n    >\n      <Toolbar>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Typography\n            variant=\"h6\"\n            className={scrollPos ? classes.brandScrolled : classes.brandDefault}\n          >\n            Notflix\n          </Typography>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst footer = (props) => {\n  return (\n    <div id=\"footer\">\n      &copy; Copyright 2020, Developed by&nbsp;\n      <a\n        className=\"author\"\n        href=\"https://www.linkedin.com/in/sudeepp/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Sudeep Pirangi\n      </a>\n      &nbsp;using React library\n    </div>\n  );\n};\n\nexport default footer;\n","const CONSTANTS = {\n  FIREBASE_TOKEN_REFRESH: \"https://securetoken.googleapis.com/v1/token?key=\",\n  FIREBASE_SIGNUP_URI:\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\",\n  FIREBASE_SIGNIN_URI:\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\",\n  FIREBASE_APIKEY: \"AIzaSyDBhRGnt6_66UpuAC_qRZ80Slbg0VnxwQc\",\n  NOTFLIX_URI: \"https://notflix-node-api.herokuapp.com\",\n};\n\nexport default CONSTANTS;\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport {\n  Grid,\n  FormControl,\n  InputLabel,\n  FilledInput,\n  InputAdornment,\n  IconButton,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\nimport * as actionTypes from \"../store/actions/actionTypes\";\n\nexport const Signup = (props) => {\n  const [signupData, setSignupData] = React.useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    showPassword: false,\n    showConfirmPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setSignupData({ ...signupData, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setSignupData({ ...signupData, showPassword: !signupData.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleClickShowConfirmPassword = () => {\n    setSignupData({\n      ...signupData,\n      showConfirmPassword: !signupData.showConfirmPassword,\n    });\n  };\n\n  const handleMouseDownConfirmPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const signupSubmitHandler = (event) => {\n    event.preventDefault();\n    let signupFormData = {\n      firstname: signupData.firstname,\n      lastname: signupData.lastname,\n      email: signupData.email,\n      password: signupData.password,\n      confirmPassword: signupData.confirmPassword,\n    };\n    // console.log(\"signupFormData\", signupFormData);\n    props.onSignupSubmit(signupFormData);\n  };\n\n  const SignupError = () => {\n    if (props.signupError && props.signupError.length > 0) {\n      return (\n        <Typography\n          component=\"h2\"\n          variant=\"h6\"\n          style={{ fontWeight: \"bold\", color: \"red\", marginTop: 20 }}\n        >\n          {props.signupError}\n        </Typography>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  if (props.isAuth) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <Fragment>\n        <Typography component=\"h1\" variant=\"h4\">\n          User Signup\n        </Typography>\n\n        <SignupError />\n\n        <Grid container justify=\"center\">\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <form noValidate autoComplete=\"off\" onSubmit={signupSubmitHandler}>\n              <FormControl variant=\"filled\" fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"filled-adornment-password\">\n                  First name\n                </InputLabel>\n                <FilledInput\n                  id=\"firstname\"\n                  type=\"text\"\n                  onChange={handleChange(\"firstname\")}\n                />\n              </FormControl>\n\n              <FormControl variant=\"filled\" fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"filled-adornment-password\">\n                  Last name\n                </InputLabel>\n                <FilledInput\n                  id=\"lastname\"\n                  type=\"text\"\n                  onChange={handleChange(\"lastname\")}\n                />\n              </FormControl>\n\n              <FormControl variant=\"filled\" fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"filled-adornment-password\">\n                  Email Address\n                </InputLabel>\n                <FilledInput\n                  id=\"email\"\n                  type=\"text\"\n                  onChange={handleChange(\"email\")}\n                />\n              </FormControl>\n\n              <FormControl variant=\"filled\" fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"filled-adornment-password\">\n                  Password\n                </InputLabel>\n                <FilledInput\n                  id=\"password\"\n                  type={signupData.showPassword ? \"text\" : \"password\"}\n                  value={signupData.password}\n                  onChange={handleChange(\"password\")}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {signupData.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n\n              <FormControl variant=\"filled\" fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"filled-adornment-confirmPassword\">\n                  Confirm Password\n                </InputLabel>\n                <FilledInput\n                  id=\"confirmPassword\"\n                  type={signupData.showConfirmPassword ? \"text\" : \"password\"}\n                  value={signupData.confirmPassword}\n                  onChange={handleChange(\"confirmPassword\")}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle confirm password visibility\"\n                        onClick={handleClickShowConfirmPassword}\n                        onMouseDown={handleMouseDownConfirmPassword}\n                        edge=\"end\"\n                      >\n                        {signupData.showConfirmPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n\n              <FormControl>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  type=\"submit\"\n                  style={{ marginTop: 20 }}\n                >\n                  Signup to Notflix\n                </Button>\n\n                <Link\n                  to=\"/login\"\n                  className=\"link-outlined link-primary\"\n                  style={{ marginTop: 20 }}\n                >\n                  Switch to Login\n                </Link>\n              </FormControl>\n            </form>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuthorized,\n    signupError: state.auth.signupError,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSignupSubmit: (signupFormData) => {\n      dispatch(actionTypes.signupCreator(signupFormData));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import axios from \"axios\";\n\nimport CONSTANTS from \"../../Constants\";\n\n// Auth Actions\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOGOUT = \"LOGOUT\";\n\n// Auth Action creators\n\nconst signupSuccess = (signupFormData, res) => {\n  return { type: SIGNUP_SUCCESS, inputData: signupFormData, response: res };\n};\nconst signupFailure = (error) => {\n  return { type: SIGNUP_FAILURE, response: error };\n};\nexport const signupCreator = (signupFormData) => {\n  const postData = {\n    email: signupFormData.email,\n    password: signupFormData.password,\n    returnSecureToken: true,\n  };\n  // console.log(\"postData\", postData);\n  return (dispatch) => {\n    axios\n      .post(CONSTANTS.FIREBASE_SIGNUP_URI + CONSTANTS.FIREBASE_APIKEY, postData)\n      .then((res) => {\n        console.log(\"signup success\", res);\n        dispatch(signupSuccess(signupFormData, res));\n      })\n      .catch((error) => {\n        console.log(\"signup post error: \", error.response);\n        dispatch(signupFailure(error.response));\n      });\n  };\n};\n\n// Login Action Creators\nconst loginSuccess = (response) => {\n  return { type: LOGIN_SUCCESS, response: response };\n};\nconst loginFailure = (errorResponse) => {\n  return { type: LOGIN_FAILURE, errorResponse: errorResponse };\n};\nexport const loginCreator = (email, password) => {\n  const postData = {\n    email: email,\n    password: password,\n    returnSecureToken: true,\n  };\n  // console.log(\"login data\", postData);\n  return (dispatch) => {\n    axios\n      .post(CONSTANTS.FIREBASE_SIGNIN_URI + CONSTANTS.FIREBASE_APIKEY, postData)\n      .then((res) => {\n        console.log(\"login success\", res);\n        dispatch(loginSuccess(res));\n      })\n      .catch((error) => {\n        console.log(\"login failure\", error.response);\n        dispatch(loginFailure(error.response));\n      });\n  };\n};\n\nexport const logoutCreator = () => {\n  return { type: LOGOUT };\n};\n\n// Flix Action Creators\nexport const SELECTED_FLIX = \"SELECTED_FLIX\";\nexport const SELECTED_GENRE = \"SELECTED_GENRE\";\n\nexport const selectedFlixCreator = (flix) => {\n  return { type: SELECTED_FLIX, flix: flix };\n};\n\nexport const selectedGenreCreator = (genre) => {\n  return { type: SELECTED_GENRE, genre: genre };\n};\n","import React, { useState, Fragment } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  FormControl,\n  InputLabel,\n  FilledInput,\n  InputAdornment,\n  IconButton,\n  Button,\n  Typography,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\nimport * as actionTypes from \"../store/actions/actionTypes\";\n\nconst Login = (props) => {\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\",\n    showPassword: false,\n  });\n  const [validator, setValidator] = useState({\n    email: {\n      value: loginData.email,\n      touched: false,\n      isValid: true,\n      errMsg: \"\",\n    },\n    password: {\n      value: loginData.password,\n      touched: false,\n      isValid: true,\n      errMsg: \"\",\n    },\n  });\n\n  const handleChange = (prop) => (event) => {\n    let value = event.target.value.trim();\n    setLoginData({ ...loginData, [prop]: value });\n    switch (prop) {\n      case \"email\":\n        setValidator({\n          ...validator,\n          email: { ...validator.email, value: value, touched: true },\n        });\n        break;\n      case \"password\":\n        setValidator({\n          ...validator,\n          password: { ...validator.password, value: value, touched: true },\n        });\n        break;\n      default:\n        setValidator({ ...validator });\n    }\n  };\n\n  const handleClickShowPassword = () => {\n    setLoginData({ ...loginData, showPassword: !loginData.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const loginSubmitHandler = (event) => {\n    event.preventDefault();\n\n    var regex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+(?:[A-Z]{2}|com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum)\\b/;\n    let tempEmailValidator = { touched: true };\n    let tempPasswordValidator = { touched: true };\n\n    if (loginData.email.length === 0) {\n      tempEmailValidator.isValid = false;\n      tempEmailValidator.errMsg = \"Email cannot be empty\";\n    } else if (!regex.test(loginData.email)) {\n      tempEmailValidator.isValid = false;\n      tempEmailValidator.errMsg = \"Email entered is invalid\";\n    } else {\n      tempEmailValidator.isValid = true;\n      tempEmailValidator.errMsg = \"\";\n    }\n\n    if (loginData.password.length === 0) {\n      tempPasswordValidator.isValid = false;\n      tempPasswordValidator.errMsg = \"Password cannot be empty\";\n    } else if (\n      loginData.password.length < 8 ||\n      loginData.password.length > 15\n    ) {\n      tempPasswordValidator.isValid = false;\n      tempPasswordValidator.errMsg = \"Password must contain 8 to 15 characters\";\n    } else {\n      tempPasswordValidator.isValid = true;\n      tempPasswordValidator.errMsg = \"\";\n    }\n\n    if (tempEmailValidator.isValid && tempPasswordValidator.isValid) {\n      console.log(\"Valid login\");\n      props.onLoginSubmit(loginData.email, loginData.password);\n    } else {\n      console.log(\"Invalid login\");\n      setValidator({\n        ...validator,\n        email: tempEmailValidator,\n        password: tempPasswordValidator,\n      });\n    }\n  };\n\n  const LoginError = () => {\n    if (props.loginError && props.loginError.length > 0) {\n      return (\n        <Typography\n          component=\"h2\"\n          variant=\"h6\"\n          style={{ fontWeight: \"bold\", color: \"red\", marginTop: 20 }}\n        >\n          {props.loginError}\n        </Typography>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  if (props.isAuth) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <Fragment>\n        <Typography component=\"h1\" variant=\"h4\">\n          User Login\n        </Typography>\n\n        <LoginError />\n\n        <Grid container justify=\"center\">\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <form noValidate autoComplete=\"off\" onSubmit={loginSubmitHandler}>\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                margin=\"normal\"\n                error={!validator.email.isValid}\n              >\n                <InputLabel htmlFor=\"filled-adornment-password\">\n                  Email Address\n                </InputLabel>\n                <FilledInput\n                  id=\"email\"\n                  type=\"text\"\n                  onChange={handleChange(\"email\")}\n                />\n                <FormHelperText id=\"filled-weight-helper-text\">\n                  {validator.email.errMsg}\n                </FormHelperText>\n              </FormControl>\n\n              <FormControl\n                variant=\"filled\"\n                fullWidth\n                margin=\"normal\"\n                error={!validator.password.isValid}\n              >\n                <InputLabel htmlFor=\"filled-adornment-password\">\n                  Password\n                </InputLabel>\n                <FilledInput\n                  id=\"password\"\n                  type={loginData.showPassword ? \"text\" : \"password\"}\n                  value={loginData.password}\n                  onChange={handleChange(\"password\")}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {loginData.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n                <FormHelperText id=\"filled-weight-helper-text\">\n                  {validator.password.errMsg}\n                </FormHelperText>\n              </FormControl>\n\n              <FormControl>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"large\"\n                  type=\"submit\"\n                  // disabled={\n                  //   !validator.email.isValid || !validator.password.isValid\n                  // }\n                  style={{ marginTop: 20 }}\n                >\n                  Login to Notflix\n                </Button>\n\n                <Link\n                  to=\"/signup\"\n                  className=\"link-outlined link-primary\"\n                  style={{ marginTop: 20 }}\n                >\n                  Switch to sign-up\n                </Link>\n              </FormControl>\n            </form>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  console.log(\"login auth state\", state.auth.isAuthorized);\n  return {\n    isAuth: state.auth.isAuthorized,\n    loginError: state.auth.loginError,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLoginSubmit: (email, password) => {\n      dispatch(actionTypes.loginCreator(email, password));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\n\nimport * as actionTypes from \"../store/actions/actionTypes\";\n\nexport const Logout = (props) => {\n  if (props.isAuthorized) {\n    props.onLogout();\n    return (\n      <Fragment>\n        <Typography component=\"h1\" variant=\"h4\">\n          You have been logged-out successfully\n        </Typography>\n        <Button\n          href=\"/login\"\n          className=\"watch\"\n          color=\"secondary\"\n          size=\"large\"\n          variant=\"contained\"\n          endIcon={<LockOpenIcon color=\"inherit\" />}\n          style={{ marginTop: 30 }}\n        >\n          Login Again\n        </Button>\n      </Fragment>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthorized: state.auth.isAuthorized,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => {\n      dispatch(actionTypes.logoutCreator());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Carousel from \"react-material-ui-carousel\";\nimport { Paper, Button } from \"@material-ui/core\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\n\nconst FlixCarousel = (props) => {\n  return (\n    <Carousel\n      animation=\"fade\"\n      autoPlay={true}\n      navButtonsAlwaysVisible={true}\n      fullHeightHover={true}\n    >\n      {carouselFlix.map((flix) => (\n        <CarouselItem key={flix._id} flix={flix} />\n      ))}\n    </Carousel>\n  );\n};\n\nconst CarouselItem = (props) => {\n  const history = useHistory();\n\n  const getFlixHandler = (flixId) => {\n    let selectedFlix = null;\n    carouselFlix.forEach((flix) => {\n      if (flix._id === flixId) {\n        selectedFlix = flix;\n      }\n    });\n    history.push(\"/flix/\" + flixId, selectedFlix);\n  };\n\n  return (\n    <Paper variant=\"elevation\" className=\"carouselHolder\">\n      <img src={props.flix.thumbnailUrl} alt={props.flix.title} />\n      <div className=\"flixInfo\">\n        <h2>{props.flix.title}</h2>\n        <p className=\"imdb\">\n          <strong>IMDb: </strong>\n          {props.flix.imdb}\n        </p>\n        <p className=\"genre\">\n          <strong>Genre: </strong>\n          {props.flix.genre.join(\", \")}\n        </p>\n        <Button\n          className=\"watch\"\n          color=\"secondary\"\n          size=\"large\"\n          variant=\"contained\"\n          endIcon={<PlayCircleFilledIcon color=\"inherit\" />}\n          onClick={getFlixHandler.bind(this, props.flix._id)}\n        >\n          Watch Now\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nconst carouselFlix = [\n  {\n    thumbnailUrl: \"https://via.placeholder.com/150.jpg\",\n    videoUrl: \"https://via.placeholder.com/500.jpg\",\n    genre: [\"Documentary\"],\n    languages: [\"English\", \"Malai\", \"Thai\"],\n    _id: \"5f85b348fc2173092415558a\",\n    title: \"Green House\",\n    desc: \"Sample Description\",\n    category: \"Documentary\",\n    releaseDate: \"2019-12-31T18:30:00.000Z\",\n    imdb: 7.2,\n    createdAt: \"2020-10-13T14:01:45.027Z\",\n    updatedAt: \"2020-11-01T15:09:12.870Z\",\n    __v: 5,\n  },\n  {\n    thumbnailUrl: \"https://via.placeholder.com/150.jpg\",\n    videoUrl: \"https://via.placeholder.com/500.jpg\",\n    genre: [\"Horror\", \"Comedy\"],\n    languages: [\"Tamil\", \"Telugu\"],\n    _id: \"5f85b4e34c748809c6fb3d0c\",\n    title: \"In Pursuit of Crappiness\",\n    desc: \"Sample Description\",\n    category: \"Documentary\",\n    releaseDate: \"2019-12-31T18:30:00.000Z\",\n    imdb: 7.2,\n    createdAt: \"2020-10-13T14:08:35.248Z\",\n    updatedAt: \"2020-11-01T15:32:34.085Z\",\n    __v: 3,\n  },\n  {\n    thumbnailUrl: \"https://via.placeholder.com/150.jpg\",\n    videoUrl: \"https://via.placeholder.com/500.jpg\",\n    genre: [\"Romantic\", \"Comedy\"],\n    languages: [\"English\", \"French\"],\n    _id: \"5f86773f01a4ae5aeeb3e475\",\n    title: \"French Rom-Com\",\n    desc: \"Sample Description\",\n    category: \"TV\",\n    releaseDate: \"2019-12-31T18:30:00.000Z\",\n    imdb: 5,\n    createdAt: \"2020-10-14T03:57:51.419Z\",\n    updatedAt: \"2020-11-01T14:59:40.862Z\",\n    __v: 1,\n  },\n];\n\nexport default FlixCarousel;\n","import React from \"react\";\nimport {\n  Container,\n  Typography,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\n// import BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport { useStyles } from \"../../custom-theme\";\n\nconst FlixCollection = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const allFlix = props.flix;\n\n  const getGenreHandler = (genre, genreFlix) => {\n    history.push(\"/group/\" + genre, genreFlix);\n  };\n\n  const getFlixHandler = (flixId) => {\n    let selectedFlix = null;\n    allFlix.forEach((flix) => {\n      if (flix._id === flixId) {\n        selectedFlix = flix;\n      }\n    });\n    history.push(\"/flix/\" + flixId, selectedFlix);\n  };\n\n  const HorizontalFlixList = (props) => {\n    // console.log(\"allFlix\", allFlix);\n    return (\n      <GridList className={classes.gridList} cols={4}>\n        {allFlix.map((flix) => (\n          <GridListTile\n            onClick={getFlixHandler.bind(this, flix._id)}\n            key={flix._id}\n            classes={{ tile: classes.gridTile }}\n          >\n            <img src={flix.thumbnailUrl} alt={flix.title} />\n            <GridListTileBar\n              title={flix.title}\n              subtitle={flix.genre.join(\", \")}\n              classes={{\n                root: classes.gridTileBar,\n                subtitle: classes.subtitle,\n              }}\n              actionIcon={\n                <IconButton>\n                  <BookmarkIcon color=\"secondary\" />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    );\n  };\n\n  if (props.flix) {\n    return (\n      <Container style={{ textAlign: \"left\" }}>\n        <Typography variant=\"h6\" component=\"h2\" color=\"initial\">\n          {props.name}{\" \"}\n          <span\n            className=\"secondary\"\n            onClick={getGenreHandler.bind(this, props.name, props.flix)}\n          >\n            see more\n          </span>\n        </Typography>\n        <HorizontalFlixList flix={props.flix} />\n      </Container>\n    );\n  }\n};\n\nexport default FlixCollection;\n","import React from \"react\";\n\nconst Spinner = (props) => {\n  if (props.visible) {\n    // return (\n    //   <div style={classes.spinner}>\n    //     {/* <i className=\"mySpinner\" style={classes.spinnerIcon}>\n    //       &#xf110;\n    //     </i> */}\n    //     <img src=\"/spinner.gif\" style={classes.spinnerImg} alt=\"spinner\" />\n    //   </div>\n    // );\n    return (\n      <div id=\"spinnerBackdrop\">\n        <img src=\"/spinner.gif\" style={classes.spinnerImg} alt=\"spinner\" />\n        {/* <p style={classes.waitText}>Loading...</p> */}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default Spinner;\n\nconst classes = {\n  spinner: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  spinnerIcon: {\n    fontSize: 36,\n    color: \"#f44336\",\n  },\n  spinnerImg: {\n    height: 60,\n  },\n  waitText: {\n    fontWeight: 500,\n    fontSize: 18,\n    color: \"#f44336\",\n    textTransform: \"uppercase\",\n    marginTop: 10,\n  },\n};\n","import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\n// import { Typography } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport FlixCarousel from \"./FlixCarousel\";\nimport FlixCollection from \"./FlixCollection\";\nimport Spinner from \"../Spinner\";\n\nclass Home extends Component {\n  state = {\n    flix: [],\n    spin: false,\n  };\n\n  componentDidMount() {\n    this.setState({ ...this.state, spin: true });\n    axios\n      .get(\"https://notflix-node-api.herokuapp.com/getAllFlix\")\n      .then((res) => {\n        if (res.data) {\n          let allFlix = res.data;\n          console.log(\"allflix res\", allFlix);\n          this.setState({ flix: allFlix, spin: false });\n        }\n      })\n      .catch((err) => {\n        console.log(\"Unable to getFlix\", err);\n      });\n  }\n\n  render() {\n    console.log(\"Initial State\", this.props.initialState.isAuthorized);\n\n    return (\n      <Fragment>\n        {/* <Typography variant=\"h4\" component=\"h1\">\n          {this.props.selectedFlix}\n        </Typography> */}\n\n        <Spinner visible={this.state.spin} />\n\n        <FlixCarousel />\n\n        <FlixCollection name={\"Wishlist\"} flix={this.state.flix} />\n\n        {this.props.preferredLang.map((lang, index) => {\n          let langCollection = this.state.flix.filter((flix) => {\n            return flix.languages.includes(lang);\n          });\n          return (\n            <FlixCollection\n              key={lang + index}\n              name={lang}\n              flix={langCollection}\n            />\n          );\n        })}\n\n        {this.props.preferredGenre.map((genre, index) => {\n          let genreCollection = this.state.flix.filter((flix) => {\n            return flix.genre.includes(genre);\n          });\n          return (\n            <FlixCollection\n              key={genre + index}\n              name={genre}\n              flix={genreCollection}\n            />\n          );\n        })}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    initialState: state.auth,\n    isAuth: state.auth.isAuthorized,\n    expiresIn: state.auth.expiresIn,\n    preferredLang: state.auth.preferredLang,\n    preferredGenre: state.auth.preferredGenre,\n    selectedFlix: state.flix.selectedFlix,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => {\n      dispatch(actionTypes.logoutCreator());\n    },\n    onFlixSelection: () => {\n      dispatch({ type: \"SELECTED-FLIX\" });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport * as actionTypes from \"../store/actions/actionTypes\";\n\nconst SessionValidator = (props) => {\n  console.log(\"Validating Session\");\n\n  const Validity = () => {\n    if (props.isAuth) {\n      const sessionExpiry = new Date(props.expiresIn) <= new Date();\n      console.log(\"Previously logged-in user\");\n      if (sessionExpiry) {\n        console.log(\"Session expired: clearing\");\n        props.onLogout();\n        return <Redirect to=\"/login\" />;\n      }\n      return null;\n    } else {\n      console.log(\"User not logged-in\");\n      return <Redirect to=\"/login\" />;\n    }\n  };\n\n  return <Validity />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuthorized,\n    expiresIn: state.auth.expiresIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => {\n      dispatch(actionTypes.logoutCreator());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionValidator);\n","import React, { Fragment } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nimport SessionValidator from \"../SessionValidator\";\n\nconst Flix = (props) => {\n  const flix = props.location.state || props.flix;\n  console.log(flix, props.location.state, props.flix);\n  if (flix) {\n    return (\n      <Fragment>\n        <SessionValidator />\n\n        <h1>{flix.title}</h1>\n        <Container>\n          <img src={flix.videoUrl} alt={flix.title} />\n        </Container>\n        <div className=\"rowFlexi\">\n          <div className=\"flexItem labelFlexi\">\n            <p className=\"title\">Title : </p>\n            <p className=\"imdb\">IMDB : </p>\n            <p className=\"category\">Category : </p>\n            <p className=\"genre\">Genre : </p>\n            <p className=\"lang\">Languages : </p>\n            <p className=\"release\">Released : </p>\n            <p className=\"desc\">Description : </p>\n          </div>\n          <div className=\"flexItem valueFlexi\">\n            <p className=\"title\">{flix.title}</p>\n            <p className=\"imdb\">{flix.imdb == null ? \"N/A\" : flix.imdb}</p>\n            <p className=\"category\">{flix.category}</p>\n            <p className=\"genre\">{flix.genre.join(\", \")}</p>\n            <p className=\"lang\">{flix.languages.join(\", \")}</p>\n            <p className=\"release\">\n              {moment(flix.releasedDate).format(\"Do MMMM YYYY\")}\n            </p>\n            <p className=\"desc\">{flix.desc}</p>\n          </div>\n        </div>\n      </Fragment>\n    );\n  } else {\n    return <h1>No data to display</h1>;\n  }\n};\n\nexport default Flix;\n","import React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { useStyles } from \"../../custom-theme\";\nimport { useHistory } from \"react-router-dom\";\n\nconst GenreCollection = (props) => {\n  const flixArray = props.location.state;\n  const classes = useStyles();\n  const history = useHistory();\n\n  const getFlixHandler = (flixId) => {\n    let selectedFlix = null;\n    flixArray.forEach((flix) => {\n      if (flix._id === flixId) {\n        selectedFlix = flix;\n      }\n    });\n    history.push(\"/flix/\" + flixId, selectedFlix);\n  };\n\n  return (\n    <Fragment>\n      <h1>{props.match.params.genre} Collection</h1>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"stretch\"\n        spacing={1}\n        className={classes.Grid}\n      >\n        {flixArray.map((flix) => {\n          return (\n            <Grid key={flix._id} item xs={12} sm={4} md={3}>\n              <Card className={classes.Card} raised>\n                <CardHeader\n                  title={flix.title}\n                  subheader={flix.genre.join(\", \")}\n                />\n                <CardMedia\n                  className={classes.CardMedia}\n                  image={flix.thumbnailUrl}\n                  title={flix.title}\n                  onClick={getFlixHandler.bind(this, flix._id)}\n                />\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {flix.desc}\n                  </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                  <IconButton aria-label=\"add to wishlist\">\n                    <BookmarkIcon color=\"secondary\" />\n                  </IconButton>\n                  <IconButton aria-label=\"share\">\n                    <ShareIcon />\n                  </IconButton>\n                </CardActions>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GenreCollection;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst NotAllowed = (props) => {\n  return (\n    <Typography component=\"h1\" variant=\"h4\" color=\"secondary\">\n      Access Denied\n    </Typography>\n  );\n};\n\nexport default NotAllowed;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Logout\";\nimport Home from \"./components/Home/Home\";\nimport Flix from \"./components/Home/Flix\";\nimport GenreCollection from \"./components/Home/GenreCollection\";\nimport NotAllowed from \"./components/NotAllowed\";\n\nconst App = (props) => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <main id=\"mainWrapper\">\n          <Switch>\n            <Route path=\"/signup\" exact component={Signup} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/flix/:flixId\" component={Flix} />\n            <Route path=\"/group/:genre\" component={GenreCollection} />\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/not-allowed\" exact component={NotAllowed} />\n            <Route path=\"/\" exact component={Home} />\n          </Switch>\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst intialState = {\n  selectedFlix: null,\n  selectedGenre: \"\",\n};\n\nconst flixReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.SELECTED_FLIX:\n      return {\n        ...state,\n        selectedFlix: action.flix,\n      };\n    case actionTypes.SELECTED_GENRE:\n      return {\n        ...state,\n        selectedGenre: action.genre,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default flixReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  email: localStorage.getItem(\"email\") || \"\",\n  userId: localStorage.getItem(\"userId\") || \"\",\n  firstname: localStorage.getItem(\"firstname\") || \"\",\n  lastname: localStorage.getItem(\"lastname\") || \"\",\n  preferredLang: [\"English\"],\n  preferredGenre: [\"Horror\", \"Crime\"],\n  isAuthorized: JSON.parse(localStorage.getItem(\"isAuthorized\")) || false,\n  token: localStorage.getItem(\"token\") || null,\n  refreshToken: localStorage.getItem(\"refreshToken\") || null,\n  expiresIn: localStorage.getItem(\"expiresIn\") || null,\n  signupError: \"\",\n  loginError: \"\",\n};\n\nconst setLocalStorage = (stateObj) => {\n  for (let key in stateObj) {\n    localStorage.setItem(key, stateObj[key]);\n  }\n};\n\nconst signupSuccessReducer = (state, action) => {\n  let storableData = {\n    email: action.response.data.email,\n    userId: action.response.data.localId,\n    firstname: action.inputData.firstname,\n    lastname: action.inputData.lastname,\n    isAuthorized: true,\n    token: action.response.data.idToken,\n    refreshToken: action.response.data.refreshToken,\n    expiresIn: new Date(\n      Date.now() + (+action.response.data.expiresIn - 2) * 1000\n    ),\n  };\n  setLocalStorage(storableData);\n  return {\n    ...state,\n    ...storableData,\n    signupError: \"\",\n    loginError: \"\",\n  };\n};\n\nconst signupFailureReducer = (state, action) => {\n  let errorMsg = \"Unable to Signup\";\n  if (action.response) {\n    errorMsg = action.response.data.error.message;\n  }\n  return {\n    ...state,\n    isAuthorized: false,\n    signupError: errorMsg,\n  };\n};\n\nconst loginSuccessReducer = (state, action) => {\n  let storableLoginData = {\n    email: action.response.data.email,\n    userId: action.response.data.localId,\n    firstname: \"Sudeep\",\n    lastname: \"Pirangi\",\n    isAuthorized: true,\n    token: action.response.data.idToken,\n    refreshToken: action.response.data.refreshToken,\n    expiresIn: new Date(\n      Date.now() + (+action.response.data.expiresIn - 2) * 1000\n    ),\n  };\n  setLocalStorage(storableLoginData);\n  return {\n    ...state,\n    ...storableLoginData,\n    signupError: \"\",\n    loginError: \"\",\n  };\n};\n\nconst loginFailureReducer = (state, action) => {\n  let errorLoginMsg = \"Unable to Login\";\n  if (action.errorResponse) {\n    errorLoginMsg = action.errorResponse.data.error.message;\n  }\n  return {\n    ...state,\n    isAuthorized: false,\n    loginError: errorLoginMsg,\n  };\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SIGNUP_SUCCESS:\n      return signupSuccessReducer(state, action);\n    case actionTypes.SIGNUP_FAILURE:\n      return signupFailureReducer(state, action);\n    case actionTypes.LOGIN_SUCCESS:\n      return loginSuccessReducer(state, action);\n    case actionTypes.LOGIN_FAILURE:\n      return loginFailureReducer(state, action);\n    case actionTypes.LOGOUT:\n      localStorage.clear();\n      return {\n        ...state,\n        ...initialState,\n      };\n    default:\n      return initialState;\n  }\n};\n\nexport default AuthReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./App\";\nimport { theme } from \"./custom-theme\";\nimport \"fontsource-roboto\";\nimport \"./index.css\";\n\nimport flixReducer from \"./store/reducers/flixReducer\";\nimport authReducer from \"./store/reducers/authReducer\";\n\nconst rootReducer = combineReducers({\n  flix: flixReducer,\n  auth: authReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App/>\n  // </React.StrictMode>,\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}